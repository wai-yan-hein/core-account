/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.acc.setup;

import com.acc.common.AccountRepo;
import com.acc.common.CurExchangeRateTableModel;
import com.acc.common.DateAutoCompleter;
import com.acc.dialog.ExchangeDialog;
import com.acc.model.ReportFilter;
import com.common.Global;
import com.common.PanelControl;
import com.common.SelectionObserver;
import com.common.TableCellRender;
import com.user.model.CurExchange;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.ListSelectionModel;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import reactor.core.publisher.Flux;

/**
 *
 * @author Lenovo
 */
@Slf4j
@Component
public class CurrencyExchange extends javax.swing.JPanel implements PanelControl, SelectionObserver {

    private ExchangeDialog dialog;
    private final CurExchangeRateTableModel exchangeTableModel = new CurExchangeRateTableModel();
    private int selectRow = -1;
    private SelectionObserver observer;
    private JProgressBar progress;
    private DateAutoCompleter dateAutoCompleter;
    @Autowired
    private AccountRepo accountRepo;

    public JProgressBar getProgress() {
        return progress;
    }

    public void setProgress(JProgressBar progress) {
        this.progress = progress;
    }

    public SelectionObserver getObserver() {
        return observer;
    }

    public void setObserver(SelectionObserver observer) {
        this.observer = observer;
    }

    /**
     * Creates new form CurrencyExchange
     */
    public CurrencyExchange() {
        initComponents();
    }

    public void initMain() {
        dateAutoCompleter = new DateAutoCompleter(txtDate, Global.listDate);
        dateAutoCompleter.setSelectionObserver(this);
        initTable();
    }

    private void initTable() {
        tblExchange.setModel(exchangeTableModel);
        tblExchange.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblExchange.setRowHeight(Global.tblRowHeight);
        tblExchange.getTableHeader().setFont(Global.tblHeaderFont);
        tblExchange.setDefaultRenderer(Object.class, new TableCellRender());
        tblExchange.setDefaultRenderer(Double.class, new TableCellRender());
        tblExchange.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblExchange.getColumnModel().getColumn(1).setPreferredWidth(50);
        tblExchange.getColumnModel().getColumn(2).setPreferredWidth(300);
        tblExchange.getColumnModel().getColumn(3).setPreferredWidth(20);
        tblExchange.getColumnModel().getColumn(4).setPreferredWidth(20);
        tblExchange.getColumnModel().getColumn(5).setPreferredWidth(50);
        searchExchange();
    }

    private void searchExchange() {
        String fromDate = dateAutoCompleter.getStDate();
        String toDate = dateAutoCompleter.getEndDate();
        ReportFilter filter = new ReportFilter(Global.compCode, Global.macId);
        filter.setFromDate(fromDate);
        filter.setToDate(toDate);
        Flux<CurExchange> result = accountRepo.searchExchange(filter);
        result.subscribe((t) -> {
            exchangeTableModel.addEX(t);
        }, (e) -> {
        }, () -> {
            List<CurExchange> list = exchangeTableModel.getListEx();
            double amt = list.stream().mapToDouble(CurExchange::getExRate).sum();
            txtAvg.setValue(amt / list.size());
            txtRecord.setText("" + list.size());
        });

    }

    private void selectExchange() {
        selectRow = tblExchange.convertRowIndexToModel(tblExchange.getSelectedRow());
        if (selectRow >= 0) {
            CurExchange ex = exchangeTableModel.getEX(selectRow);
            exDialog(ex, "EDIT");
        }
    }

    private void exDialog(CurExchange ex, String status) {
        dialog.setupData();
        dialog.setStatus(status);
        dialog.setObserver(this);
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }

    private void deleteEx() {
        int row = tblExchange.convertRowIndexToModel(tblExchange.getSelectedRow());
        if (row >= 0) {
            int y = JOptionPane.showConfirmDialog(this, "Are you sure to deleted?");
            if (y == JOptionPane.YES_OPTION) {
                CurExchange ex = exchangeTableModel.getEX(row);
                accountRepo.delete(ex.getKey());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblExchange = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtRecord = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAvg = new javax.swing.JFormattedTextField();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tblExchange.setFont(Global.textFont);
        tblExchange.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblExchange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblExchangeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblExchange);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(Global.lableFont);
        jLabel1.setText("Date");

        txtDate.setFont(Global.textFont);

        jButton1.setFont(Global.lableFont);
        jButton1.setText("New Exchange");
        jButton1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setFont(Global.lableFont);
        jLabel3.setText("Records");

        txtRecord.setEditable(false);
        txtRecord.setFont(Global.amtFont);

        jLabel2.setFont(Global.lableFont);
        jLabel2.setText("Avg");

        txtAvg.setEditable(false);
        txtAvg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAvg.setFont(Global.amtFont);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAvg, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRecord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtAvg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 913, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        observer.selected("CONTROL", this);
    }//GEN-LAST:event_formComponentShown

    private void tblExchangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblExchangeMouseClicked
        // TODO add your handling code here
        if (evt.getClickCount() == 2) {
            selectExchange();
        }
    }//GEN-LAST:event_tblExchangeMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblExchange;
    private javax.swing.JFormattedTextField txtAvg;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtRecord;
    // End of variables declaration//GEN-END:variables

    @Override
    public void save() {
    }

    @Override
    public void delete() {
        deleteEx();
    }

    @Override
    public void newForm() {
    }

    @Override
    public void history() {
    }

    @Override
    public void print() {

    }

    @Override
    public void refresh() {
        searchExchange();
    }

    @Override
    public String panelName() {
        return this.getName();
    }

    @Override
    public void selected(Object source, Object selectObj) {
        if (source != null) {
            searchExchange();
        }
    }

    @Override
    public void filter() {
    }
}
